import{gP as g,ab as C,v as A,bo as f,aC as m,gQ as l,bb as T,cf as h,a$ as b,c6 as B,gR as I,gS as y,fL as S}from"./index-40f6b818.js";import{b as x}from"./migration-97db9f5a.js";const k="0xeC037423A61B634BFc490dcc215236349999ca3d",W=g("migration/ethereum-conic/update",async({vaultId:t,walletAddress:a},{getState:r})=>{const c=r(),d=C(c,t),n=A(c,d.chainId),s=await f(n),e=m(c,d.chainId,d.depositTokenAddress),o=new s.eth.Contract(l,k),p=await new s.eth.Contract(l,e.address).methods.minter().call(),u=await o.methods.getUserBalanceForPool(p,a).call(),w=new T(u).shiftedBy(-e.decimals);return{vaultId:t,walletAddress:a,balance:w,migrationId:"ethereum-conic"}});async function P(t,a,r){const c=m(r,t.chainId,t.depositTokenAddress),n=await(await y()).getConnectedWeb3Instance(),e=await new n.eth.Contract(l,c.address).methods.minter().call(),o=new n.eth.Contract(l,k),i=S(a,c.decimals);return o.methods.unstake(i.toString(10),e)}const V=g("migration/ethereum-conic/execute",async({vaultId:t,t:a,migrationId:r},{getState:c,dispatch:d})=>{const n=[],s=c(),e=C(s,t),o=m(s,e.chainId,e.depositTokenAddress),{balance:i}=x(s,t,r),p=await P(e,i,s);n.push({step:"migration",message:a("Vault-MigrationStart"),action:h.migrateUnstake(p,e,i.shiftedBy(o.decimals),r),pending:!1,extraInfo:{vaultId:t}}),b(o)&&B(s,o.chainId,o.address,e.earnContractAddress).lt(i)&&n.push({step:"approve",message:a("Vault-ApproveMsg"),action:h.approval(o,e.earnContractAddress),pending:!1}),n.push({step:"deposit",message:a("Vault-TxnConfirm",{type:a("Deposit-noun")}),action:h.deposit(e,i,!0),pending:!1,extraInfo:{vaultId:e.id}}),d(I(n,e.chainId))}),L={update:W,execute:V};export{V as executeConicAction,W as fetchConicStakedBalance,L as migrator};
