import{c as A,_ as v}from"./BeefyV2AppMulticall-c5605e28.js";import{f7 as C,a$ as E,b0 as M,f3 as x,bp as V,f4 as G,bb as c,f8 as P,f9 as q,fa as _,c8 as N}from"./index-40f6b818.js";const U=v;class j{constructor(n,s){this.web3=n,this.chain=s}async fetchAllBalances(n,s,a,o,r){const l=new this.web3.eth.Contract(U,this.chain.appMulticallContractAddress),h=C(),b=[],k=[];for(const e of s)if(E(e))k.push(e);else if(M(e))b.push(e);else throw new Error("Token type unsupported");const g=A(k,h),T=o?[]:A([...o,...a],h),m=[];T.forEach(e=>{m.push({method:l.methods.getBoostOrGovBalance(e.map(t=>t.earnContractAddress),r).call,params:{from:"0x0000000000000000000000000000000000000000"}})}),g.forEach(e=>{m.push({method:l.methods.getTokenBalances(e.map(t=>t.address),r).call,params:{from:"0x0000000000000000000000000000000000000000"}})}),m.push({method:this.web3.eth.getBalance,params:r});const f=await x(this.web3,m),i={tokens:[],govVaults:[],boosts:[]};let d=0,w=0;for(let e=0;e<T.length;e++){for(let t=0;t<f[d].length;t++){const B=f[d][t];w<o.length?i.boosts.push(this.boostFormatter(n,B,o[w])):i.govVaults.push(this.govVaultFormatter(n,B,a[w-o.length])),w++}d++}for(const e of g){const t=f[d].map((B,R)=>this.erc20TokenFormatter(B,e[R]));i.tokens=i.tokens.concat(t),d++}for(const e of b){const t=this.nativeTokenFormatter(f[d],e);i.tokens.push(t),d++}const F=new V.MultiCall(await this.web3,this.chain.multicallAddress),p=new this.web3.eth.Contract(G,"0x87d8F4F150Ddd4D21fB6120a22c402fAA466dAC3"),y=o.map(e=>[{userInfo:p.methods.userInfo(e.farmPid,r),rewards:p.methods.pendingReward(e.farmPid,r)}]),I=a.map(e=>[{userInfo:p.methods.userInfo(e.farmPid,r),rewards:p.methods.pendingReward(e.farmPid,r)}]);console.log("debug before balance multi",y,I);const u=await F.all(y.concat(I));return console.log("debug after balance multi",u),o.map((e,t)=>{i.boosts.push({boostId:e.id,balance:new c(u[t][0].userInfo[0]).shiftedBy(-18),rewards:new c(u[t][0].rewards).shiftedBy(-18)})}),a.map((e,t)=>{i.govVaults.push({vaultId:e.id,balance:new c(u[t+o.length][0].userInfo[0]).shiftedBy(-18),rewards:new c(u[t+o.length][0].rewards).shiftedBy(-18)})}),console.log("debug after balance parse: ",i),i}erc20TokenFormatter(n,s){const a=new c(n);return{tokenAddress:s.address,amount:a.shiftedBy(-s.decimals)}}nativeTokenFormatter(n,s){const a=new c(n);return{tokenAddress:s.address,amount:a.shiftedBy(-s.decimals)}}govVaultFormatter(n,s,a){const o=P(n,a.id),r=q(n,a.id),l=new c(s.balance),h=new c(s.rewards);return{vaultId:a.id,balance:l.shiftedBy(-o.decimals),rewards:h.shiftedBy(-r.decimals)}}boostFormatter(n,s,a){const o=_(n,a.id),r=N(n,a.id),l=new c(s.balance),h=new c(s.rewards);return{boostId:a.id,balance:l.shiftedBy(-o.decimals),rewards:h.shiftedBy(-r.decimals)}}}export{j as BalanceAPI};
